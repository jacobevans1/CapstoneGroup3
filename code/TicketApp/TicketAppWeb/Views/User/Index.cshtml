@using Microsoft.AspNetCore.Identity
@model UserViewModel
@{
	ViewBag.Title = "User Management";
}

<!-- Google Font for Bubblegum Sans -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Bubblegum+Sans&display=swap" rel="stylesheet">

<!-- Link to site.css -->
<link href="~/css/projectmanagement.css" rel="stylesheet" />

<!-- TempData variables -->
@{
	var successMessage = TempData["SuccessMessage"] as string;
	var errorMessage = TempData["ErrorMessage"] as string;
}

<!-- Display success messages if any -->
@if (!string.IsNullOrEmpty(successMessage))
{
	<div class="alert alert-success">
		@successMessage
	</div>
}

<!-- Display error messages if any -->
@if (!string.IsNullOrEmpty(errorMessage))
{
	<div class="alert alert-danger">
		@errorMessage
	</div>
}


<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2 class="text-center">User Management</h2>
	        <div class="title-divider"></div>
			
	        <!-- Filter Options -->
	        <div class="row mb-3">
		        <div class="col-md-12 d-flex justify-content-between align-items-center">
	                
			        <!-- Add User Button -->
			        @if (Model.CurrentUserRole == "Admin")
			        {
				        <button type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addUserModal">Add User</button>
			        }

			        <!-- Search Fields -->
			        <div class="d-flex gap-2">
				        <input type="text" id="userSearch" class="form-control" placeholder="Search by user's name" value="@Model.UserNameSearchString">
				        <button type="button" class="btn btn-primary" id="searchBtn">Search</button>
				        <button type="button" class="btn btn-secondary" id="clearSearchBtn">Clear</button>
			        </div>
		        </div>
	        </div>

            <table class="table table-striped">
                <thead>
                <tr>
	                <th scope="col">
		                Name
	                </th>
	                <th scope="col">
		               Email
	                </th>
	                <th scope="col">
		                Role
	                </th>
                </tr>
                </thead>
                <tbody>
                    @foreach (TicketAppUser user in Model.FilteredUsers)
                    {
                        <tr>
                            <td>@user.FullName</td>
	                        <td>@user.Email</td>
							<td>@Model.UserRoles[user]</td>
                            
	                        @if (Model.CurrentUserRole == "Admin")
	                        {
		                        <td>
			                        <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#editUserModal" data-user-id="@user.Id">Edit</button>
			                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteUserModal" data-user-id="@user.Id">Delete</button>
		                        </td>
	                        }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Create User Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="addUserModalLabel">Create User</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<form asp-action="CreateUser" asp-controller="User" method="post">
				<div class="modal-body">
					<!-- First Name -->
					<div class="mb-3">
						<label for="createFirstName" class="form-label">
							First Name <span class="text-danger">*</span>
						</label>
						<input type="text" class="form-control" id="createFirstName" asp-for="@Model.User.FirstName" required>
						<span asp-validation-for="@Model.User.FirstName" class="text-danger"></span>
					</div>

					<!-- Last Name -->
					<div class="mb-3">
						<label for="createLastName" class="form-label">
							Last Name <span class="text-danger">*</span>
						</label>
						<input type="text" class="form-control" id="createLastName" asp-for="@Model.User.LastName" required>
						<span asp-validation-for="@Model.User.LastName" class="text-danger"></span>
					</div>

					<!-- Email -->
					<div class="mb-3">
						<label for="createEmail" class="form-label">
							Email <span class="text-danger">*</span>
						</label>
						<input type="email" class="form-control" id="createEmail" asp-for="@Model.User.Email" required>
						<span asp-validation-for="@Model.User.Email" class="text-danger"></span>
					</div>

					<!-- Phone Number -->
					<div class="mb-3">
						<label for="createPhone" class="form-label">
							Phone Number
						</label>
						<input type="tel" class="form-control" id="createPhone" asp-for="@Model.User.PhoneNumber">
					</div>

					<!-- Role -->
					<div class="mb-3">
						<label for="createRole" class="form-label">
							Role <span class="text-danger">*</span>
						</label>
						<select id="createRole" asp-for="@Model.SelectedRoleName" class="form-select" required>
							@foreach (var role in Model.AvailableRoles)
							{
								<option value="@role.Name">@role.Name</option>
							}
						</select>
						<span asp-validation-for="@Model.SelectedRoleName" class="text-danger"></span>
					</div>

				</div>
				<div class="modal-footer">
					<button type="submit" class="btn btn-primary">Create User</button>
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				</div>
			</form>
		</div>
	</div>
</div>


<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<form asp-action="EditUser" asp-controller="User" method="post">
				<div class="modal-body">
					<!-- First Name -->
					<div class="mb-3">
						<label for="editFirstName" class="form-label">
							First Name <span class="text-danger">*</span>
						</label>
						<input type="text" class="form-control" id="editFirstName" asp-for="@Model.User.FirstName" required>
						<span asp-validation-for="@Model.User.FirstName" class="text-danger"></span>
					</div>

					<!-- Last Name -->
					<div class="mb-3">
						<label for="editLastName" class="form-label">
							Last Name <span class="text-danger">*</span>
						</label>
						<input type="text" class="form-control" id="editLastName" asp-for="@Model.User.LastName" required>
						<span asp-validation-for="@Model.User.LastName" class="text-danger"></span>
					</div>

					<!-- Email -->
					<div class="mb-3">
						<label for="editEmail" class="form-label">
							Email <span class="text-danger">*</span>
						</label>
						<input type="email" class="form-control" id="editEmail" asp-for="@Model.User.Email" required>
						<span asp-validation-for="@Model.User.Email" class="text-danger"></span>
					</div>

					<!-- Phone Number -->
					<div class="mb-3">
						<label for="editPhone" class="form-label">
							Phone Number
						</label>
						<input type="tel" class="form-control" id="editPhone" asp-for="@Model.User.PhoneNumber">
					</div>

					<!-- Role -->
					<div class="mb-3">
						<label for="editRole" class="form-label">
							Role <span class="text-danger">*</span>
						</label>
						<select id="editRole" asp-for="@Model.SelectedRoleName" class="form-select" required>
							@foreach (var role in Model.AvailableRoles)
							{
								<option value="@role.Name">@role.Name</option>
							}
						</select>
						<span asp-validation-for="@Model.SelectedRoleName" class="text-danger"></span>
					</div>

				</div>
				<div class="modal-footer">
					<button type="submit" class="btn btn-primary">Save Changes</button>
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				</div>
			</form>
		</div>
	</div>
</div>


<!-- Delete User Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="deleteUserModalLabel">Confirm Delete</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<p>Are you sure you want to delete <strong id="deleteUserFullName">@Model.User.FullName</strong>?</p>
			</div>
			<div class="modal-footer">
				<form id="deleteUserForm" asp-action="DeleteConfirmed" asp-controller="User" method="post">
					<input type="hidden" id="deleteUserId" name="id" />
					<button type="submit" class="btn btn-danger">Delete User</button>
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				</form>
			</div>
		</div>
	</div>
</div>

<script>
	$('#editUserModal').on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget);
		var userId = button.data('user-id');

		$.ajax({
			url: '@Url.Action("GetUserData", "User")',
			method: 'GET',
			data: { id: userId },
			success: function (data) {
				
				$('#editFirstName').val(data.firstName);
				$('#editLastName').val(data.lastName);
				$('#editEmail').val(data.email);
				$('#editPhone').val(data.phoneNumber);
				$('#editRole').val(data.roleId);
			},
			error: function (err) {
				console.error('Error fetching user data:', err);
			}
		});
	});
</script>

<script>
	$('#deleteUserModal').on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget);
		var userId = button.data('user-id');

		$.ajax({
			url: '@Url.Action("DeleteUser", "User")',
			method: 'GET',
			data: { id: userId },
			success: function (data) {
				$('#deleteUserFullName').text(data.fullName);
				$('#deleteUserId').val(userId);
			},
			error: function (err) {
				console.error('Error fetching user data:', err);
			}
		});
	});
</script>


<script>
	document.addEventListener("DOMContentLoaded", function () {
		document.getElementById("searchBtn").addEventListener("click", function () {
			let userName = document.getElementById("userSearch").value;
			let url = new URL(window.location.href);
			url.searchParams.set("userName", userName);
			window.location.href = url.toString();
		});

		document.getElementById("clearSearchBtn").addEventListener("click", function () {
			let url = new URL(window.location.href);
			url.searchParams.delete("userName");
			window.location.href = url.toString();
		});
	});

	setTimeout(function () {
		document.querySelectorAll('.alert').forEach(alert => alert.style.display = 'none');
	}, 5000);

</script>

