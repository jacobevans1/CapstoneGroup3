@model GroupViewModel
@{
    ViewData["Title"] = "Group Management";
}

<!-- Google Font -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Bubblegum+Sans&display=swap" rel="stylesheet">

<!-- Link to CSS -->
<link href="~/css/projectmanagement.css" rel="stylesheet" />

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <!-- Display Success and Error Messages -->
            @{
                var successMessage = TempData["SuccessMessage"] as string;
                var errorMessage = TempData["ErrorMessage"] as string;
            }

            @if (!string.IsNullOrEmpty(successMessage))
            {
                <div class="alert alert-success">
                    @successMessage
                </div>
            }

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger">
                    @errorMessage
                </div>
            }

            <h2 class="text-center">Group Management</h2>
            <div class="title-divider"></div>

            <!-- Filter Options -->
            <div class="row mb-3">
                <div class="col-md-12 d-flex justify-content-between align-items-center">
	                
	                <!-- Add Group Button -->
                    @if (Model.CurrentUserRole == "Admin")
                    {
	                    <div style="width: 150px;">
		                    <a class="btn btn-primary mb-3" asp-controller="Group" asp-action="CreateGroup" style="width: 100%;">Create Group</a>
	                    </div>
                    }

                    <!-- Search Fields -->
                    <div class="d-flex gap-2">
                        <input type="text" id="groupSearch" class="form-control" placeholder="Search by group name" value="@Model.SearchGroupName">
                        <input type="text" id="leadSearch" class="form-control" placeholder="Search by group lead name" value="@Model.SearchGroupLead">
                        <button type="button" class="btn btn-primary" id="filterBtn">Filter</button>
                        <button type="button" class="btn btn-secondary" id="clearFilterBtn">Clear</button>
                    </div>
                </div>
            </div>

            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">Group Name</th>
                        <th scope="col">Members</th>
                        <th scope="col">Group Lead</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var group in Model.FilteredGroups)
                    {
                        <tr>
                            <td>@group.GroupName</td>
                            <td>
                                @foreach (var member in group.Members)
                                {
                                    <span class="badge bg-info text-dark">@member.FirstName @member.LastName</span>
                                }
                            </td>
                            <td>
                                @if (group.Manager != null)
                                {
                                    @* <a href="@Url.Action("Details", "User", new { id = group.Manager.Id })"> *@
                                    @*     @group.Manager.FirstName @group.Manager.LastName *@
                                    @* </a> *@

                                    <span class="badge bg-success text-dark text-decoration-none d-inline-block" style="max-width: 150px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">@group.Manager.FirstName @group.Manager.LastName</span>
                                }
                            </td>
	                        <td>

                                @if (Model.CurrentUserRole == "Admin" || Model.IsCurrentUserGroupManagerForGroup(group))
                                {
	                                <div class="d-flex justify-content-center gap-2">
		                                <div class="col-auto" style="width: 150px;">
			                                <a asp-action="EditGroup" asp-controller="Group" asp-route-id="@group.Id" class="btn btn-warning" style="width: 100%;">
				                                Edit
			                                </a>
		                                </div>
		                                <div class="col-auto" style="width: 150px">
			                                <a asp-action="DeleteGroup" asp-controller="Group" asp-route-id="@group.Id" class="btn btn-danger" style="width: 100%;">
				                                Delete
			                                </a>
		                                </div>
	                                </div>
                                }
	                        </td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("filterBtn").addEventListener("click", function () {
                let groupName = document.getElementById("groupSearch").value;
                let groupLead = document.getElementById("leadSearch").value;
                let url = new URL(window.location.href);
                url.searchParams.set("groupName", groupName);
                url.searchParams.set("groupLead", groupLead);
                window.location.href = url.toString();
            });

            document.getElementById("clearFilterBtn").addEventListener("click", function () {
                let url = new URL(window.location.href);
                url.searchParams.delete("groupName");
                url.searchParams.delete("groupLead");
                window.location.href = url.toString();
            });
        });

        setTimeout(function () {
            document.querySelectorAll('.alert').forEach(alert => alert.style.display = 'none');
        }, 5000);

    </script>
}
