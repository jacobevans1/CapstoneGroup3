@model TicketAppWeb.Models.ViewModels.AddGroupViewModel

@{
    ViewData["Title"] = "Edit Group";
}

<!-- Google Font -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Bubblegum+Sans&display=swap" rel="stylesheet">

<!-- Link to CSS -->
<link href="~/css/projectmanagement.css" rel="stylesheet" />

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2 class="text-center">Edit Group</h2>
            <div class="title-divider"></div>
        </div>
    </div>

    <form asp-action="UpdateGroup" method="post" class="styled-form">
        <input type="hidden" asp-for="GroupId" />

        <div class="form-group">
            <label asp-for="GroupName" class="form-label">Group Name</label>
            <input asp-for="GroupName" class="form-control" required />
            <span asp-validation-for="GroupName" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Description" class="form-label">Description</label>
            <textarea asp-for="Description" class="form-control" required></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        <div class="row">
            <div class="col-md-5">
                <h5>All Users</h5>
                <select id="allUsersList" class="form-control" size="10" multiple>
                    @foreach (var user in Model.AllUsers.Where(u => !Model.SelectedUserIds.Contains(u.Id)))
                    {
                        <option value="@user.Id">
                            @user.UserName (@user.Email)
                        </option>
                    }
                </select>

            </div>

            <div class="col-md-2 text-center align-self-center">
                <button type="button" class="btn btn-primary" onclick="addUser()">Add →</button>
                <br /><br />
                <button type="button" class="btn btn-danger" onclick="removeUser()">← Remove</button>
            </div>

            <div class="col-md-5">
                <h5>Potential Group Members</h5>
                <select id="selectedUsersList" class="form-control" size="10" multiple name="SelectedUserIds">
                    @foreach (var userId in Model.SelectedUserIds)
                    {
                        var user = Model.AllUsers.FirstOrDefault(u => u.Id == userId);
                        if (user != null)
                        {
                            <option value="@user.Id" selected>@user.UserName (@user.Email)</option>
                        }
                    }
                </select>

            </div>
        </div>

        <div class="form-group mt-3">
            <label class="form-label">Group Lead (must be in the group)</label>
            <select asp-for="GroupLeadId" class="form-control" id="groupLeadDropdown">
                <option value="">Select Group Lead</option>
                @foreach (var userId in Model.SelectedUserIds)
                {
                    var user = Model.AllUsers.FirstOrDefault(u => u.Id == userId);
                    if (user != null)
                    {
                        var isSelected = Model.GroupLeadId == user.Id ? "selected" : null;
                        <option value="@user.Id" selected="@isSelected">@user.UserName</option>
                    }
                }
            </select>
            <span asp-validation-for="GroupLeadId" class="text-danger"></span>
        </div>

        <div class="mt-3 text-center">
            <button type="submit" class="btn btn-success">Update Group</button>
            <a asp-action="Index" asp-controller="Group" class="btn btn-secondary">Cancel</a>
        </div>
    </form>
</div>

@section scripts {
    <script>
        function addUser() {
            $('#allUsersList option:selected').each(function () {
                let option = $(this);
                $('#selectedUsersList').append(option);
            });
            $('#allUsersList option').prop('selected', false); // Deselect after moving
            updateGroupLeadDropdown();
        }

        function removeUser() {
            $('#selectedUsersList option:selected').each(function () {
                let option = $(this);
                $('#allUsersList').append(option);
            });
            $('#selectedUsersList option').prop('selected', false); // Deselect after moving
            updateGroupLeadDropdown();
        }

        function updateGroupLeadDropdown() {
            let groupLeadDropdown = $('#groupLeadDropdown');
            let selectedLead = groupLeadDropdown.val(); // Preserve selected Group Lead

            groupLeadDropdown.empty();
            groupLeadDropdown.append('<option value="">Select Group Lead</option>');

            $('#selectedUsersList option').each(function () {
                let userId = $(this).val();
                let userName = $(this).text();
                let isSelected = selectedLead === userId ? 'selected' : '';
                groupLeadDropdown.append('<option value="' + userId + '" ' + isSelected + '>' + userName + '</option>');
            });
        }

        function selectAllMembersBeforeSubmit() {
            $('#selectedUsersList option').prop('selected', true);
        }

        $(document).ready(function () {
            // Ensure all users in the Potential Group Members list are selected before submitting
            $('form').on('submit', function () {
                selectAllMembersBeforeSubmit();
            });

            // Click anywhere on the page to deselect users, but NOT the Group Lead selection
            $(document).on('click', function (event) {
                if (!$(event.target).is('option') && !$(event.target).closest('#groupLeadDropdown').length) {
                    $('#allUsersList option, #selectedUsersList option').prop('selected', false);
                }
            });
        });
    </script>



}
