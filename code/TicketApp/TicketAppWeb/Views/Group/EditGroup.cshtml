@*
    The front end for editing a group
    Emma
    03/?/2025
*@
@model AddGroupViewModel
@{
    ViewData["Title"] = "Edit Group";
}

<!-- Google Font -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Bubblegum+Sans&display=swap" rel="stylesheet">

<!-- Link to CSS -->
<link href="~/css/projectmanagement.css" rel="stylesheet" />

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2 class="text-center">Edit Group</h2>
            <div class="title-divider"></div>
        </div>
    </div>

    <form asp-action="UpdateGroup" method="post" class="styled-form">
        <input type="hidden" asp-for="GroupId" />

        <div class="form-group">
            <label asp-for="GroupName" class="form-label">Group Name <span class="text-danger">*</span></label>
            <input asp-for="GroupName" class="form-control" required />
            <span asp-validation-for="GroupName" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Description" class="form-label">Description <span class="text-danger">*</span></label>
            <textarea asp-for="Description" class="form-control" required></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        <div class="row">
            <!-- Available Users -->
            <div class="col-md-5">
                <h6>Available Users</h6>
                <ul id="availableUsers" class="list-group">
                    @foreach (var user in Model.AllUsers)
                    {
                        if (!Model.SelectedUserIds.Contains(user.Id))
                        {
                            <li class="list-group-item">
                                <input type="checkbox" class="user-checkbox form-check-input mt-0" value="@user.Id" />
                                @user.UserName (@user.Email)
                            </li>
                        }
                    }
                </ul>
            </div>

            <div class="col-md-2 text-center align-self-center">
                <button type="button" class="btn btn-primary mb-2" id="addUsersBtn">Add →</button>
                <br /><br />
                <button type="button" class="btn btn-danger" id="removeUsersBtn">← Remove</button>
            </div>

            <!-- Selected Members -->
            <div class="col-md-5">
                <h6>Selected Members <span class="text-danger">*</span></h6>
                <ul id="selectedUsers" class="list-group">
                    @foreach (var user in Model.AllUsers)
                    {
                        if (Model.SelectedUserIds.Contains(user.Id))
                        {
                            <li class="list-group-item">
                                <input type="checkbox" class="assigned-user-checkbox form-check-input mt-0" name="SelectedUserIds" value="@user.Id" checked />
                                @user.UserName (@user.Email)
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
        <span asp-validation-for="SelectedUserIds" class="text-danger"></span>
        <br />

        <!-- Group Lead Selection -->
        <div class="form-group mt-3">
            <label class="form-label">Group Lead <span class="text-danger">*</span></label>
            <select id="groupLead" asp-for="GroupLeadId" class="form-select">
                <option value="">Select a Lead</option>
                @foreach (var user in Model.AllUsers.Where(u => Model.SelectedUserIds.Contains(u.Id)))
                {
                    <option value="@user.Id" selected="@(Model.GroupLeadId == user.Id ? "selected" : null)">
                        @user.UserName (@user.Email)
                    </option>
                }
            </select>
            <input type="hidden" id="hiddenGroupLeadId" name="GroupLeadId" value="@Model.GroupLeadId" />
            <span asp-validation-for="GroupLeadId" class="text-danger"></span>
        </div>

        <br />
        <div class="row justify-content-center">
            <div class="col-auto">
                <button type="submit" class="btn btn-primary">Update Group</button>
            </div>
            <div class="col-auto">
                <a asp-action="Index" asp-controller="Group" class="btn btn-secondary">Cancel</a>
            </div>
        </div>
    </form>
</div>

@section scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const availableUsers = document.getElementById("availableUsers");
            const selectedUsers = document.getElementById("selectedUsers");
            const groupLeadSelect = document.getElementById("groupLead");
            const form = document.querySelector(".styled-form"); 

            document.getElementById("addUsersBtn").addEventListener("click", function () {
                moveSelectedUsers(availableUsers, selectedUsers, true);
            });

            document.getElementById("removeUsersBtn").addEventListener("click", function () {
                moveSelectedUsers(selectedUsers, availableUsers, false);
            });

            function moveSelectedUsers(sourceList, targetList, isAdding) {
                const selectedItems = sourceList.querySelectorAll("input:checked");
                selectedItems.forEach(item => {
                    let listItem = item.closest("li");
                    item.checked = false; 

                    if (isAdding) {
                        item.classList.add("assigned-user-checkbox");
                        item.name = "SelectedUserIds";
                        item.checked = true; 
                    } else {
                        item.classList.remove("assigned-user-checkbox");
                        item.removeAttribute("name"); 
                    }

                    targetList.appendChild(listItem);
                });

                updateGroupLeads();
            }

            function updateGroupLeads() {
                groupLeadSelect.innerHTML = '<option value="">Select a Lead</option>';
                let selectedUserIds = Array.from(selectedUsers.querySelectorAll(".assigned-user-checkbox"))
                    .map(item => item.value);

                if (selectedUserIds.length === 0) {
                    return;
                }

                selectedUserIds.forEach(userId => {
                    let userText = document.querySelector(`input[value="${userId}"]`).parentNode.textContent.trim();
                    let option = document.createElement("option");
                    option.value = userId;
                    option.textContent = userText;
                    groupLeadSelect.appendChild(option);
                });

                if (document.getElementById("hiddenGroupLeadId").value) {
                    let selectedOption = groupLeadSelect.querySelector(`option[value='${document.getElementById("hiddenGroupLeadId").value}']`);
                    if (selectedOption) {
                        selectedOption.selected = true;
                    }
                }
            }

            document.getElementById("groupLead").addEventListener("change", function () {
                document.getElementById("hiddenGroupLeadId").value = this.value;
            });

            updateGroupLeads();

            form.addEventListener("submit", function () {
                document.querySelectorAll(".assigned-user-checkbox").forEach(input => {
                    input.checked = true; 
                });
            });
        });

    </script>
}
