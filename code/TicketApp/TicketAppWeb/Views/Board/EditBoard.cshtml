@model TicketAppWeb.Models.ViewModels.BoardViewModel
@{
    ViewBag.Title = "Edit " + Model.Project.ProjectName + " Board";
}

<!-- TempData -->
@{
    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success">@successMessage</div>
}
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h3 class="mb-0">Edit @Model.Project.ProjectName Board</h3>
    <a asp-action="Index" asp-controller="Board" asp-route-projectId="@Model.Project.Id"
       class="btn btn-secondary d-flex justify-content-center align-items-center"
       style="width: 250px; height: 40px;">
        <i class="fas fa-arrow-left me-2"></i> Back to Board
    </a>
</div>

<!-- Main Board Container - Same scrolling implementation as Index -->
<div class="board-outer-container" style="width: 100%; height: 90vh; position: relative;">
    <div class="board-scroll-wrapper" style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; overflow-x: auto; overflow-y: hidden;">
        <div class="board-inner-container d-flex flex-nowrap gap-4" style="height: 100%; padding: 0 20px 20px 20px;">
            @foreach (var stage in Model.Stages)
            {
                <div class="stage-column" style="flex: 0 0 400px; height: 100%;">
                    <div class="card border-light rounded h-100">
                        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                            <div>
                                <h5 class="mb-0">@stage.Name</h5>
                                <small class="text-white-50">@(Model.AssignedGroups?.GetValueOrDefault(stage.Id) ?? "Unassigned")</small>
                            </div>

                            @if (Model.CurrentUserRole == "Admin" || Model.IsCurrentUserProjectLeadForProject() || Model.IsCurrentUserAGroupManagerInProject())
                            {
                                <div class="dropdown" style="margin-left: auto;">
                                    <button class="btn btn-link p-0" type="button" id="ellipsisButton-@stage.Id" data-bs-toggle="dropdown" aria-expanded="false" style="background: none; border: none; color: white; padding: 0 15px;">
                                        <i class="fas fa-ellipsis-h" style="font-size: 16px;"></i>
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                        @if (Model.CurrentUserRole == "Admin" || Model.IsCurrentUserProjectLeadForProject())
                                        {
                                            <li>
                                                <a class="dropdown-item d-flex align-items-center" href="#" data-bs-toggle="modal" data-bs-target="#assignGroupModal" onclick="setAssignGroupData('@stage.Id')">
                                                    <i class="fas fa-users me-2"></i> Assign Group
                                                </a>
                                            </li>
                                        }
                                        <li>
                                            <a class="dropdown-item d-flex align-items-center" href="#" data-bs-toggle="modal" data-bs-target="#renameStageModal" onclick="setRenameStageData('@stage.Id', '@stage.Name')">
                                                <i class="fas fa-pen me-2"></i> Rename Stage
                                            </a>
                                        </li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li>
                                            <a class="dropdown-item d-flex align-items-center text-danger" href="#" data-bs-toggle="modal" data-bs-target="#deleteStageModal" onclick="setDeleteStageData('@stage.Id')">
                                                <i class="fas fa-trash-alt me-2"></i> Remove Stage
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            }
                        </div>

                        <div class="card-body" style="overflow-y: auto;">
                            <ul class="list-group list-group-flush">
                                @* Task list here *@
                            </ul>
                        </div>

                        <div class="card-footer">
                            <form id="stageForm_@stage.Id" method="post" asp-action="MoveStage" asp-controller="Board">
                                <input type="hidden" asp-for="Board.Id" />
                                <input type="hidden" asp-for="Project.Id" />
                                <input type="hidden" id="moveStageId_@stage.Id" name="SelectedStageId" value="" />
                                <input type="hidden" id="moveDirection_@stage.Id" name="SelectedDirection" value="" />

                                <div class="d-flex justify-content-between">
                                    @if (Model.CurrentUserRole == "Admin" || Model.IsCurrentUserProjectLeadForProject() || Model.IsCurrentUserAGroupManagerInProject())
                                    {
                                        <button type="submit" class="btn btn-sm" onclick="setMoveStageData('@stage.Id', 'left');">
                                            <i class="fas fa-arrow-left"></i>
                                        </button>
                                    }

                                    <button class="btn btn-sm btn-success d-flex align-items-center gap-1"
                                            data-bs-toggle="modal"
                                            data-bs-target="#addTaskModal"
                                            onclick="setAddTaskData('@stage.Id')">
                                        <i class="fas fa-plus" style="font-size: 1rem;"></i>
                                        <span style="font-size: 1rem;">Add Item</span>
                                    </button>

                                    @if (Model.CurrentUserRole == "Admin" || Model.IsCurrentUserProjectLeadForProject() || Model.IsCurrentUserAGroupManagerInProject())
                                    {
                                        <button type="submit" class="btn btn-sm" onclick="setMoveStageData('@stage.Id', 'right');">
                                            <i class="fas fa-arrow-right"></i>
                                        </button>
                                    }
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            }

            @if (Model.CurrentUserRole == "Admin" || Model.IsCurrentUserProjectLeadForProject() || Model.IsCurrentUserAGroupManagerInProject())
            {
                <div class="stage-column" style="flex: 0 0 400px; height: 100%; display: flex; align-items: center; justify-content: center;">
                    <button class="btn btn-primary d-flex align-items-center gap-1"
                            data-bs-toggle="modal"
                            data-bs-target="#addStageModal">
                        <i class="fas fa-plus" style="font-size: 1rem;"></i>
                        <span style="font-size: 1rem;">Add Stage</span>
                    </button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Add Stage Modal -->
<div class="modal fade" id="addStageModal" tabindex="-1" aria-labelledby="addStageModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addStageModalLabel">Add New Stage</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="AddStage" asp-controller="Board" method="post">
                <input type="hidden" asp-for="Board.Id" />
                <input type="hidden" asp-for="Project.Id" />
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="newStageName" class="form-label">
                            Stage Name<span class="text-danger">*</span>
                        </label>
                        <input type="text" class="form-control" id="newStageName" asp-for="NewStageName" required>
                        <span asp-validation-for="NewStageName" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label for="initialGroupSelect" class="form-label">Select Group</label>
                        <select class="form-select" id="initialGroupSelect" asp-for="SelectedGroupId">
                            @foreach (var group in Model.Project.Groups)
                            {
                                <option value="@group.Id">@group.GroupName</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Add Stage</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Rename Stage Modal -->
<div class="modal fade" id="renameStageModal" tabindex="-1" aria-labelledby="renameStageModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="renameStageModalLabel">Rename Stage</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="RenameStage" asp-controller="Board" method="post">
                <input type="hidden" asp-for="Board.Id" />
                <input type="hidden" asp-for="Project.Id" />
                <div class="modal-body">
                    <input type="hidden" id="renameStageId" asp-for="SelectedStageId">
                    <div class="mb-3">
                        <label for="renameStageName" class="form-label">
                            New Stage Name<span class="text-danger">*</span>
                        </label>
                        <input type="text" class="form-control" id="renameStageName" asp-for="NewStageName" required>
                        <span asp-validation-for="NewStageName" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Rename Stage</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Assign Group Modal -->
<div class="modal fade" id="assignGroupModal" tabindex="-1" aria-labelledby="assignGroupModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="assignGroupModalLabel">Assign Group to Stage</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="AssignGroupToStage" asp-controller="Board" method="post">
                <input type="hidden" asp-for="Board.Id" />
                <input type="hidden" asp-for="Project.Id" />
                <div class="modal-body">
                    <input type="hidden" id="assignGroupStageId" asp-for="SelectedStageId">
                    <div class="mb-3">
                        <label for="newGroupSelect" class="form-label">Select Group</label>
                        <select class="form-select" id="newGroupSelect" asp-for="SelectedGroupId">
                            @foreach (var group in Model.Project.Groups)
                            {
                                <option value="@group.Id">@group.GroupName</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Assign Group</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Stage Modal -->
<div class="modal fade" id="deleteStageModal" tabindex="-1" aria-labelledby="deleteStageModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteStageModalLabel">Delete Stage</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="DeleteStage" asp-controller="Board" method="post">
                <input type="hidden" asp-for="Board.Id" />
                <input type="hidden" asp-for="Project.Id" />
                <input type="hidden" id="deleteStageId" asp-for="SelectedStageId">
                <div class="modal-body">
                    <p>Are you sure you want to delete this stage? This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-danger">Delete Stage</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add Task Modal -->
@* <div class="modal fade" id="addTaskModal" tabindex="-1" aria-labelledby="addTaskModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="AddTask" asp-controller="Board" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="addTaskModalLabel">Add Task</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" asp-for="Board.Id" />
                    <input type="hidden" asp-for="Project.Id" />
                    <input type="hidden" id="taskStageId" name="StageId" />
                    <div class="mb-3">
                        <label for="taskName" class="form-label">Task Name <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="taskName" name="TaskName" required />
                    </div>
                    <div class="mb-3">
                        <label for="taskDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="taskDescription" name="TaskDescription" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Add Task</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div> *@

<!-- Include Bootstrap & FontAwesome -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>

<script>
    function setAssignGroupData(stageId) {
        document.getElementById("assignGroupStageId").value = stageId;
    }

    function setRenameStageData(stageId, stageName) {
        document.getElementById("renameStageId").value = stageId;
        document.getElementById("renameStageName").value = stageName;
    }

    function setDeleteStageData(stageId) {
        document.getElementById("deleteStageId").value = stageId;
    }

    function setMoveStageData(stageId, direction) {
        document.getElementById('moveStageId_' + stageId).value = stageId;
        document.getElementById('moveDirection_' + stageId).value = direction;
    }

    // function setAddTaskData(stageId) {
    //     document.getElementById('taskStageId').value = stageId;
    // }

    function moveStageLeft(stageId) {
        $.ajax({
            url: '/Board/MoveStage',
            type: 'POST',
            data: { stageId: stageId, direction: 'left' },
            success: function (response) {
                if (response.success) {
                    location.reload();
                }
            }
        });
    }

    function moveStageRight(stageId) {
        $.ajax({
            url: '/Board/MoveStage',
            type: 'POST',
            data: { stageId: stageId, direction: 'right' },
            success: function (response) {
                if (response.success) {
                    location.reload();
                }
            }
        });
    }

    setTimeout(function () {
        document.querySelectorAll('.alert').forEach(alert => alert.style.display = 'none');
    }, 5000);
</script>
